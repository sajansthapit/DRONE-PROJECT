version: "3.7"

services:
  service-discovery:
    build: ./service-discovery
    restart: always
    ports:
      - "8761:8761"
  api-gateway:
    build: ./api-gateway
    restart: always
    ports:
      - "9090:9090"
    #links:
     # - service-discovery
  client:
    build: ./client-service
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - service-discovery
      - rabbitmq
      - postgres_db
    #links:
     # - api-gateway
    environment:
      - DB_URL=jdbc:postgresql://postgres_db:5432/client_db
      - DB_USERNAME=postgres
      - DB_PASSWORD=root
  medication:
    build: ./medication-service
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - service-discovery
      - rabbitmq
      - postgres_db
    #links:
     # - api-gateway
    environment:
      - DB_URL=jdbc:postgresql://postgres_db:5432/medication_db
      - DB_USERNAME=postgres
      - DB_PASSWORD=root
  drone:
    build: ./drone-service
    restart: always
    ports:
      - "8082:8082"
    depends_on:
      - service-discovery
      - rabbitmq
      - postgres_db
    environment:
      - DB_URL=jdbc:postgresql://postgres_db:5432/drone_db
      - DB_USERNAME=postgres
      - DB_PASSWORD=root
    #links:
     # - api-gateway
  shipment:
    build: ./shipment-service
    restart: always
    ports:
      - "8083:8083"
    depends_on:
      - service-discovery
      - rabbitmq
      - postgres_db
    environment:
      - DB_URL=jdbc:postgresql://postgres_db:5432/shipment_db
      - DB_USERNAME=postgres
      - DB_PASSWORD=root
   # links:
    #  - api-gateway
  notification:
    build: ./notification-service
    restart: always
    ports:
      - "8084:8084"
    depends_on:
      - service-discovery
      - rabbitmq
      - postgres_db
    environment:
      - DB_URL=jdbc:postgresql://postgres_db:5432/notification_db
      - DB_USERNAME=postgres
      - DB_PASSWORD=root
    #links:
     # - api-gateway
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
  postgres_db:
    container_name: postgres_db
    image: "postgres:14-alpine"
    restart: on-failure
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    volumes:
#      - postgres:/var/lib/postgresql/data
      - ./docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
  pgadmin:
    image: "dpage/pgadmin4:latest"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "15432:80"
    depends_on:
      - postgres_db
    volumes:
      - pgadmin:/var/lib/pgadmin

volumes:
  postgres:
  pgadmin:
